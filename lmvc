#!/usr/bin/env php
<?php

// Continue only if application is ran from CLI
!strcmp(php_sapi_name(), 'cli') or exit('Run only from cli.');

// Declare application paths
define('APP_ROOT',              realpath(dirname(__FILE__)));
define('APP_CORE',              APP_ROOT . '/app/');
define('APP_CORE_CONTROLLER',   APP_CORE . 'controller/');
define('APP_CORE_MODEL',        APP_CORE . 'model/');
define('APP_CORE_VIEW',         APP_CORE . 'view/');
define('APP_CORE_HELPER',       APP_CORE . 'helper/');
define('APP_CORE_CACHE',        APP_CORE . 'cache/');
define('APP_CORE_LOG',          APP_CORE . 'log/');
define('APP_CORE_DB',           APP_CORE . 'db/');
define('APP_CORE_DEBUG',        APP_CORE . 'debug/');
define('APP_BIN',               APP_ROOT . '/bin/');

// Autoload tools
require_once(APP_BIN . 'autoload.php');
// Require lollipop-php
require_once(APP_ROOT . '/vendor/autoload.php');

// Check if config is active in current directory
if (!file_exists(APP_CORE . 'config.php')) {
    Console::error('Project config not found.');
}

// Parse configuration file
require_once(APP_CORE . 'config.php');

if (!isset($config) && !isset($config['app']) && !is_array($config['app'])) {
    Console::error('Invalid project config file.');
}

// Load configuration from LMVC application
\Lollipop\Config::load($config);

// @var     array   Commands for application
$commands = [
        'generate' => 'Generate',
        'cache' => 'Cache'
    ];

// Get first main parameter from command line
// if there is no parameter just set it to null
$cmd_main = isset($argv[1]) ? strtolower($argv[1]) : null;

if (!$cmd_main) {
    Console::error('No parameters found.');
}

if (isset($commands[$cmd_main])) {
    // Get command information
    $cmd_info = $commands[$cmd_main];

    // Get other parameters after main command
    $params = array_splice($argv, 2, count($argv) - 1);
    
    // Run application
    $cmd = new $cmd_info($params);
} else {
    // Commamd is unknown
    Console::error('Command not found: ' . $cmd_main);
}
